// Generated by Haxe 4.0.0-rc.3
(function ($global) { "use strict";
var HxOverrides = function() { };
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var Main = function() { };
Main.main = function() {
	document.querySelector("#header button.menu-btn").onclick = function(e) {
		var node = document.querySelector("#header .menu-list");
		node.className = node.className == "menu-list" ? ["menu-list","active"].join(" ") : "menu-list";
	};
	Main.makeHeaders();
};
Main.makeHeaders = function() {
	if(document.querySelector("#markdown-body") == null) {
		return;
	}
	var hds = window.document.querySelectorAll("#markdown-body" + ">" + "h1" + "[id]" + "," + "#markdown-body" + ">" + "h2" + "[id]" + "," + "#markdown-body" + ">" + "h3" + "[id]" + "," + "#markdown-body" + ">" + "h4" + "[id]");
	var lvlStack = [];
	var frags = window.document.createDocumentFragment();
	var last = null;
	var _g = 0;
	while(_g < hds.length) {
		var hd = hds[_g];
		++_g;
		var lvl = Std.parseInt(HxOverrides.substr(hd.nodeName,1,1));
		var li = dt.make("li",null,[dt.make("a",{ href : "#" + hd.getAttribute("id")},hd.textContent)]);
		while(last != li) {
			var len = lvlStack.length;
			if(len == 0 || last == null) {
				frags.appendChild(li);
				lvlStack.push(lvl);
			} else {
				var lastLvl = lvlStack[len - 1];
				if(lvl == lastLvl) {
					if(last.parentElement == null) {
						frags.appendChild(li);
					} else {
						last.parentElement.appendChild(li);
					}
				} else if(lvl > lastLvl) {
					var ul = dt.make("ul");
					ul.appendChild(li);
					last.appendChild(ul);
					lvlStack.push(lvl);
				} else {
					lvlStack.pop();
					last = last.parentElement;
					if(last != null) {
						last = last.parentElement;
					}
					continue;
				}
			}
			last = li;
		}
	}
	if(lvlStack.length > 0) {
		document.querySelector("#leftSideBar").appendChild(frags);
	}
};
var Std = function() { };
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var dt = function() { };
dt.make = function(name,attr,dyn) {
	var dom = window.document.createElement(name);
	if(attr != null) {
		for(var k in attr) dom.setAttribute(k, attr[k]);
	}
	if(dyn != null) {
		if(typeof(dyn) == "string") {
			dt.setText(dom,dyn);
		} else if(((dyn) instanceof Array) && dyn.__enum__ == null) {
			var i = 0;
			while(i < dyn.length) {
				var v = dyn[i];
				if(typeof(v) == "string") {
					dom.appendChild(window.document.createTextNode(v));
				} else {
					dom.appendChild(v);
				}
				++i;
			}
		}
	}
	return dom;
};
dt.setText = function(dom,text) {
	if(dom.nodeType == 1) {
		switch(dom.tagName) {
		case "INPUT":
			dom.value = text;
			break;
		case "OPTION":
			dom.text = text;
			break;
		case "SELECT":
			var select = dom;
			var _g = 0;
			var _g1 = select.options.length;
			while(_g < _g1) {
				var i = _g++;
				if(select.options[i].text == text) {
					select.selectedIndex = i;
					break;
				}
			}
			break;
		default:
			dom.textContent = text;
		}
	} else if(dom.nodeType != 9) {
		dom.nodeValue = text;
	}
	return text;
};
Main.main();
})({});
